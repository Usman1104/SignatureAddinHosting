{"version":3,"file":"autorun.js","mappings":"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","sources":["webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/runtime/Js/autorunshared.js","webpack://office-addin-taskpane/./src/runtime/HTML/autorunweb.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t837: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","\nOffice.onReady();\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// Contains code for event-based activation on Outlook on web, on Windows, and on Mac (new UI preview).\n/**\n * \n * Checks if signature exists.\n * If not, displays the information bar for user.\n * If exists, insert signature into new item (appointment or message).\n * @param {*} event Office event object\n * @returns\n */\nfunction checkSignature(event) {\n  const item = Office.context.mailbox.item;\n  const signatureIcon = \"iVBORw0KGgoAAAANSUhEUgAAACcAAAAnCAMAAAC7faEHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAzUExURQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKMFRskAAAAQdFJOUwAQIDBAUGBwgI+fr7/P3+8jGoKKAAAACXBIWXMAAA7DAAAOwwHHb6hkAAABT0lEQVQ4T7XT2ZalIAwF0DAJhMH+/6+tJOQqot6X6joPiouNBo3w9/Hd6+hrYnUt6vhLcjEAJevVW0zJxABSlcunhERpjY+UKoNN5+ZgDGu2onNz0OngjP2FM1VdyBW1LtvGeYrBLs7U5I1PTXZt+zifcS3Icw2GcS3vxRY3Vn/iqx31hUyTnV515kdTfbaNhZLI30AceqDiIo4tyKEmJpKdP5M4um+nUwfDWxAXdzqMNKQ14jLdL5ntXzxcRF440mhS6yu882Kxa30RZcUIjTCJg7lscsR4VsMjfX9Q0Vuv/Wd3YosD1J4LuSRtaL7bzXGN1wx2cytUdncDuhA3fu6HPTiCvpQUIjZ3sCcHVbvLtbNTHlysx2w9/s27m9gEb+7CTri6hR1wcTf2gVf3wBRe3CMbcHYvTODkXhnD0+178K/pZ9+n/C1ru/2HAPwAo7YM1X4+tLMAAAAASUVORK5CYII=\";\n\n  // Get the sender's account information.\n  item.from.getAsync((result) => {\n      if (result.status === Office.AsyncResultStatus.Failed) {\n          console.log(result.error.message);\n          event.completed();\n          return;\n      }\n\n      // Create a signature based on the sender's information.\n      const name = result.value.displayName;\n      const options = { asyncContext: name, isInline: true };\n      item.addFileAttachmentFromBase64Async(signatureIcon, \"signatureIcon.png\", options, (result) => {\n          if (result.status === Office.AsyncResultStatus.Failed) {\n              console.log(result.error.message);\n              event.completed();\n              return;\n          }\n\n          // Add the created signature to the message.\n          const signature = \"<img src='cid:signatureIcon.png'>\" + result.asyncContext;\n          item.body.setSignatureAsync(signature, { coercionType: Office.CoercionType.Html }, (result) => {\n              if (result.status === Office.AsyncResultStatus.Failed) {\n                  console.log(result.error.message);\n                  event.completed();\n                  return;\n              }\n\n              // Show a notification when the signature is added to the message.\n              // Important: Only the InformationalMessage type is supported in Outlook mobile at this time.\n              const notification = {\n                  type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n                  message: \"Company signature added.\",\n                  icon: \"none\",\n                  persistent: false                        \n              };\n              item.notificationMessages.addAsync(\"signature_notification\", notification, (result) => {\n                  if (result.status === Office.AsyncResultStatus.Failed) {\n                      console.log(result.error.message);\n                      event.completed();\n                      return;\n                  }\n\n                  event.completed();\n              });\n          });\n      });\n  });\n}\n/**\n * For Outlook on Windows and on Mac only. Insert signature into appointment or message.\n * Outlook on Windows and on Mac can use setSignatureAsync method on appointments and messages.\n * @param {*} compose_type The compose type (reply, forward, newMail)\n * @param {*} user_info Information details about the user\n * @param {*} eventObj Office event object\n */\nfunction insert_auto_signature(user_info, eventObj) {\n  let apiUrl = \"https://uaeportal.greensignature.net/Api/ApiSign?sEmail=raju@asnc.ae\";\n\n  fetch(apiUrl)\n    .then(function (response) {\n      if (!response.ok) {\n        console.log(\"Network response was not ok\");\n      }\n      return response.text();\n    })\n    .then(function (signature) {\n      // Assuming the API returns the signature as text\n      // You may need to adjust this part based on the actual response format\n      var sign = JSON.parse(signature);\n      console.log(sign);\n      if (sign[1] !== \"\") {\n        addTemplateSignature(sign[1], eventObj);\n\n        // Your logic when the signature is not empty\n      }\n    })\n    .catch(function (error) {\n      console.error(\"Fetch error:\", error);\n      // Handle errors as needed\n    });\n}\n\n/**\n   * \n   * @param {*} signatureDetails object containing:\n   *  \"signature\": The signature HTML of the template,\n      \"logoBase64\": The base64 encoded logo image,\n      \"logoFileName\": The filename of the logo image\n   * @param {*} eventObj \n   */\nfunction addTemplateSignature(signatureDetails, eventObj) {\n  Office.context.mailbox.item.body.setSignatureAsync(\n    signatureDetails,\n    {\n      coercionType: \"html\",\n      asyncContext: eventObj,\n    },\n    function (asyncResult) {\n      asyncResult.asyncContext.completed();\n    }\n  );\n}\n\n/**\n * Creates information bar to display when new message or appointment is created\n */\nfunction display_insight_infobar() {\n  Office.context.mailbox.item.notificationMessages.addAsync(\"fd90eb33431b46f58a68720c36154b4a\", {\n    type: \"insightMessage\",\n    message: \"Please set your signature with the Office Add-ins sample.\",\n    icon: \"Icon.16x16\",\n    actions: [\n      {\n        actionType: \"showTaskPane\",\n        actionText: \"Set signatures\",\n        commandId: get_command_id(),\n        contextData: \"{''}\",\n      },\n    ],\n  });\n}\n\n/**\n * Gets correct command id to match to item type (appointment or message)\n * @returns The command id\n */\nfunction get_command_id() {\n  if (Office.context.mailbox.item.itemType == \"appointment\") {\n    return \"MRCS_TpBtn1\";\n  }\n  return \"MRCS_TpBtn0\";\n}\n\n/**\n * Validates if str parameter contains text.\n * @param {*} str String to validate\n * @returns true if string is valid; otherwise, false.\n */\nfunction is_valid_data(str) {\n  return str !== null && str !== undefined && str !== \"\";\n}\n\nOffice.actions.associate(\"checkSignature\", checkSignature);\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../Js/autorunshared.js\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../Js/autorunweb.js\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <title>Signature Addin</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\"><\" + \"/script> </head> <body> </body> </html>\";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","Office","onReady","actions","associate","event","item","context","mailbox","from","getAsync","result","status","AsyncResultStatus","Failed","console","log","error","message","completed","asyncContext","value","displayName","isInline","addFileAttachmentFromBase64Async","signature","body","setSignatureAsync","coercionType","CoercionType","Html","notification","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","notificationMessages","addAsync","___HTML_LOADER_IMPORT_0___","URL","___HTML_LOADER_IMPORT_1___"],"sourceRoot":""}